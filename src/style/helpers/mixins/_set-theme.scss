@import '_triangle';
@import '_box-helpers';

/*
 * render-scoreboard-theme
 *
 * @return {mixin} theme
 */

@mixin render-scoreboard-theme() {
	$scoreboard-themes: (
		'dragon': (
			'background-color': $firebrick,
			'outline-color': $white,
		),
		'whale': (
			'background-color': $whale,
			'outline-color': $white,
		),
		'unicorn': (
			'background-color': $unicorn,
			'outline-color': $white,
		),
		'unicorn-dark': (
			'background-color': $ship-grey,
			'outline-color': lighten($ship-grey, 10%),
		),
		'ice': (
			'background-color': $white,
			'outline-color': $ice-blue,
		)
	);

	@each $theme, $styles in $scoreboard-themes {
		&.theme--#{$theme} {
  		background-color: map-get($styles, 'background-color');
  		outline-color: map-get($styles, 'outline-color');
		}
	}
}

/*
 * render-label-box-theme
 *
 * @return {mixin} theme
 */

@mixin render-label-box-theme() {
	$label-box-themes: (
		'dragon': (
			'background-color': $firebrick,
			'color': $white,
		),
		'whale': (
			'background-color': darken($whale, 10%),
			'color': $white,
		),
		'unicorn': (
			'background-color': lighten($unicorn, 4%),
			'color': $white,
			'font-weight': 400,
		),
		'unicorn-dark': (
			'background-color': $cerise-red,
			'color': $white,
			'font-weight': 400,
		),
		'ice': (
			'background-color': $sea-foam,
			'color': $white,
		)
	);

	@each $theme, $styles in $label-box-themes {
		&.theme--#{$theme} {
  		background-color: map-get($styles, 'background-color');
  		> .label-text {
  			color: map-get($styles, 'color');
  			font-weight: map-get($styles, 'font-weight');
  		}
		}
	}
}

/*
 * render-integer-box-theme
 *
 * @return {mixin} theme
 */

@mixin render-integer-box-theme() {
	$integer-box-themes: (
		'dragon': (
			'background-color': darken($firebrick, 8%),
			'border-color': darken($firebrick, 20%),
			'time-color': $yellow,
			'score-color': $yellow,
		),
		'whale': (
			'background-color': darken($whale, 18%),
			'time-color': $orange-peel,
			'score-color': $orange-peel,
			'border-color': darken($whale, 20%),
			'box-shadow': none,
		),
		'unicorn': (
			'background-color': $mine,
			'color': darken($unicorn, 7%),
			'time-color': $cerise-red,
			'score-color': $cerise-red,
		),
		'unicorn-dark': (
			'background-color': $mine,
			'time-color': $cerise-red,
			'score-color': $cerise-red,
		),
		'ice': (
			'background-color': $ice-blue,
			'time-color': $elm,
			'score-color': $amaranth,
			'border-color': $ice-blue,
			'box-shadow': none,
		),
	);

	@each $theme, $styles in $integer-box-themes {
		&.theme--#{$theme} {
  		background-color: map-get($styles, 'background-color');
  		border-color: map-get($styles, 'border-color');
  		@include box-shadow(map-get($styles, 'box-shadow'));
	    &.integer-time .digit-text {
  			color: map-get($styles, 'time-color');
	    }
	    &.integer-score .digit-text {
  			color: map-get($styles, 'score-color');
	    }
		}
	}
}

/*
 * render-colon-theme
 *
 * @return {mixin} theme
 */

@mixin render-colon-box-theme() {
	$colon-box-themes: (
		'dragon': (
			'color': $yellow,
		),
		'whale': (
			'color': $orange-peel,
		),
		'unicorn': (
			'color': $white,
		),
		'unicorn-dark': (
			'color': $cerise-red,
		),
		'ice': (
			'color': $elm,
		)
	);

	@each $theme, $styles in $colon-box-themes {
		&.theme--#{$theme} {
  		color: map-get($styles, 'color');
		}
	}
}

/*
 * render-period-indicators-theme
 *
 * @return {mixin} theme
 */

@mixin render-period-indicators-theme() {
	$period-indicators-themes: (
		'dragon': (
			'background-color': $color-inherit--darken,
			'background-color--active': $white
		),
		'whale': (
			'background-color': $white,
			'background-color--active': $orange-peel,
		),
		'unicorn': (
			'background-color': $color-inherit--darken,
			'background-color--active': $white
		),
		'unicorn-dark': (
			'background-color': $color-inherit--darken,
			'background-color--active': $cerise-red
		),
		'ice': (
			'background-color': $elm,
			'background-color--active': $amaranth,
		)
	);

	@each $theme, $styles in $period-indicators-themes {
		&.theme--#{$theme} {
			> .indicator-item {
  			background-color: map-get($styles, 'background-color');
				&[data-active="true"] {
					background-color: map-get($styles, 'background-color--active');
				}
			}
		}
	}
}

/*
 * render-possession-indicators-theme
 *
 * @return {mixin} theme
 */

@mixin render-possession-indicators-theme() {
	$possession-indicators-themes: (
		'dragon': (
			'border-color': $color-inherit--darken,
			'border-color--active': $white,
		),
		'whale': (
			'border-color': $color-inherit--darken,
			'border-color--active': $orange-peel,
		),
		'unicorn': (
			'border-color': $color-inherit--darken,
			'border-color--active': $white,
		),
		'unicorn-dark': (
			'border-color': $color-inherit--darken,
			'border-color--active': $cerise-red,
		),
		'ice': (
			'border-color': $elm,
			'border-color--active': $amaranth,
		)
	);

	@each $theme, $styles in $possession-indicators-themes {
		&.theme--#{$theme} {
			.triangle-left, {
				@include triangle-color('left', map-get($styles, 'border-color'));
			}
			.triangle-right, {
				@include triangle-color('right', map-get($styles, 'border-color'));
			}
			&[data-team-possession="away"] {
				.triangle-right {
					@include triangle-color('right', map-get($styles, 'border-color--active'));
				}
			}
			&[data-team-possession="home"] {
				.triangle-left {
					@include triangle-color('left', map-get($styles, 'border-color--active'));
				}
			}
		}
	}
}

/*
 * render-component-theme
 *
 * @param @component {string} The component to apply the theme to
 *
 * @return {mixin} theme
 */

@mixin render-component-theme($component) {
  @if $component == 'scoreboard' {
  	@include render-scoreboard-theme();
	} @else if $component == 'label-box' {
  	@include render-label-box-theme();
	} @else if $component == 'integer-box' {
		@include render-integer-box-theme();
	} @else if $component == 'period-indicators' {
		@include render-period-indicators-theme();
	} @else if $component == 'colon-box' {
		@include render-colon-box-theme();
	} @else if $component == 'possession-indicators' {
		@include render-possession-indicators-theme();
	}
}